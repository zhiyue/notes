* generalists-and-specialists-thoughts-on-hiring
#+TITLE: Generalists and specialists: thoughts on hiring

http://www.nczonline.net/blog/2014/07/15/generalists-and-specialists-thoughts-on-hiring/

-----
Generalists and young companies

A generalist is someone who, by definition, has no particular specialty. They probably graduated with a computer science degree and is good doing a lot of what I’d describe as server-side activities: databases, infrastructure, builds, deploys, data manipulation and processing, and so on. Generalists don’t mind jumping from C++ to Python to Java in the course of their work, as many languages are similar enough that there aren’t huge barriers to making the transition. They are real workhorses, able to take on whatever is thrown at them.（全才能搞定很多东西）

Generalists tend to do a good but perhaps not great job on a lot of things and tend to struggle on things that require a different mode of thinking. For instance, many generalists struggle with taking on front-end or mobile work. The paradigm is so different that there’s not enough common ground to make these work well, and so those parts of the product tend to suffer a bit in the presence of generalists.（但是全才也存在缺点，就是很难深入地思考某些事情）

Young companies don’t have the luxury of hiring people who can only do one thing or a small subset of things. There’s too much work to do and not enough people to do it. Generalists are the way that the business gets off the ground and makes something works. Everyone needs to be working on something all of the time or you’re wasting a very limited resource: money. （对于初创公司来说全才是必要的，因为每个人都需要同时做几件事情，否则就是在浪费资源）

At this stage, there’s also a certain pragmatism to the technical approach. The entire system is relatively small and so it’s possible (and necessary) for each engineer to understand each part of the system. Being able to keep the entire system in your head is key at this point, because everyone needs to be able to do just about everything.（并且这个时候系统规模还比较小，每个工程师都可以cover全部至少了解全部。这点至关重要，这样大家才能同时工作）

-----
Introducing specialists

Specialists, on the other hand, are people who excel at a particular type of thing. They have made room in their brains for deep knowledge of a particular area and, in doing so, have necessarily forgotten (intentionally or not) some of the things that generalists know top-of-mind. What specialists bring to the table is a level of excellence in something specific. They have devoted their career to focusing narrowly on something and, as a result, are much better at that thing than a generalist could ever be.（专家在某些方面工作非常出色，但是也会忘记其他方面知识，而这方面全才却了如指掌）

Early on at a company, generalists create a lot of “good enough” solutions. That’s not to say this is a bad strategy, it’s just a fact of how companies grow. The “good enough” solutions are, as the name suggestions, good enough to get the company to its next stage growth. Sometimes it’s good enough to get the company through two or three stages of growth. But eventually, “good enough” won’t be good enough anymore, and that’s when you need to start hiring specialists.（全才可以做出good enough的东西，但是只是在公司起步阶段看起来不错，之后就需要雇佣专家来改进）

This is often a controversial topic for smaller companies that are growing into larger ones. The main arguments against hiring specialists tend to be:　（但是对于那些成长为大公司的小公司来说，雇佣专家是非常具有争议性的）
- We don’t know how. The interview process is tailored for generalists. That lends itself to interview processes filled with general-purpose computer science knowledge in an effort to determine if the candidate is “smart.”  （没有比较适合来考量专家的流程，之前设计的流程都是用来考量全才的）
- It creates resource allocation problems. One of the theories behind hiring generalists is that you’ll have a small army of roughly-equivalent resources to assign to projects. If everyone is capable of doing everything, you have ultimate flexibility in resourcing projects. You don’t have to wait for Jim to come free or for Mary to finish up her last project. If an engineer becomes available, you assign them to the next thing. Specialists, by definition, are limited in what you can assign them to work on. That fundamentally shifts how resource allocation works within the engineering organization: all of a sudden there’s one person who can only do a subset of the work. The whole system is thrown into an unstable state because of this one discrepancy.（专家的工作通常可能成为瓶颈）

If you’re a specialist reading this list, you’re probably thinking, “those are bullshit reasons.” If you’re a generalist reading this list, you’re probably thinking, “well duh, obviously.” So I’ll split the difference and say that these concerns are real and valid, however, they are far from unsolvable. Many companies have tread this path and have come out successful. The trouble is always getting that first specialist in the door to prove the system can work.（这个问题所有公司都会遇到，最困难的事情莫过于，招聘到第一个专家并且证明it works）

-----
Do we really need a specialist?

Whether or not you really need a specialist tends to come down to how dire your situation is and generally falls into one of two categories:（通常下面两种情况需要考虑雇佣专家）
- Stuff is really broken. Unfortunately, this is the more common scenario. After months or years of hacking away at something, things are such a mess that “good enough” is now considered “horrible”. You need someone who already knows how to fix the problem.（事情搞不定了）
- Moving into a new area. A lot of companies will want to hire specialists when they’re moving into a new area of business and need to execute quickly. For instance, introducing a mobile application when they’ve only done web applications, or vice versa. This is a nice opportunity for the specialist because they get a blank slate to show they know their stuff. Unfortunately, these opportunities don’t come along very often.（切换到新领域）
The question of whether you real need a specialist or not can also be answered by looking at the current resource allocation. If you see the same part of the system constantly needing attention (i.e., the web front-end or the mobile app), then chances are the generalists are no longer cutting it.（如果发现某个部分持续出现问题的话，那么就是需要考虑雇佣专家了）

-----
Hiring a specialist



-----
The specialist tipping point

-----
What about just hiring the best people?

-----
Closing thoughts
