* sicp
#+TITLE: Structure and Interpretation of Computer Programs

http://mitpress.mit.edu/sicp/

绝不要认为似乎成功计算机的钥匙就掌握在你的手里。你所掌握的,也是我认为并且希望的,也就是智慧:那种看到这一机器比你第一次站在它面前时能够做的更多的能力，这样你才能将它向前推进。

一台计算机就像是把小提琴。你可以想象一个新手试了一个音符并且立刻丢弃它。后来他说，听起来真难听。我们已经从大众和我们的大部分计算机科学家那里反复听到这种说法。他们说，计算机程序对个别具体用途而言确实是好东西，但是他们太缺乏弹性了。一把小提琴或者是一台打字机也能够同样缺乏弹性，那时你学会了如何使用它们之前。

心智的活动除了尽力产生各种简单的认识外，主要表现在(组合，对比，抽象):
   1. 将若干简单认识组合称为复合认识，由此产生复杂的认识
   2. 将两个认识放在一起对照，不管简单还是复杂，由此得到它们之间的相互关系的认识
   3. 将有关认识和实际中和它们所在的认识隔离开，就是抽象，所有具有普遍性的认识都是这样得到的。

现在到了数学抽象中最关键的一步:让我们忘记这些符号所表示的对象。数学家不应该在这里停步，有许多操作可以应用于这些符号，而根本不必考虑它们代表什么。

建立新语言是在工程设计中控制复杂性的一种威力强大的工作策略，通常能够采用一种新语言提升处理复杂问题的能力，因为新语言能够使我们以一种完全不同的方式，利用不同原语组合方式和抽象方式去描述(思考)所面临的问题。

note(dirlt): [[http://mitpress.mit.edu/sicp/][SICP]] 是我在大四的时候就看的。当时只是觉得封面很有神秘感，里面的代码似乎和我以前写过的代码方式差别很大，当时没有完全看懂（现在也没有完全看懂，不确定求值没有看懂，第五章没有静下心看）。对于语言层面的认识基本上忘了，只记得有惰性求值(lazy eval)来解决流问题，正则序(normal order)和应用序(apply order)，求值顺序(eval order), eval+apply是程序运行过程等。但是当时有一点让我印象深刻，就是这么简单的语言能够组合得这么强大并且如此具有表示力。

SICP1的封面

file:./images/SICP.jpg

SICP2的封面

file:./images/SICP2.jpg
